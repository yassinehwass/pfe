{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/create-employee/create-employee.component.ts","webpack:///src/app/create-employee/create-employee.component.html","webpack:///src/app/employee-details/employee-details.component.ts","webpack:///src/app/employee-details/employee-details.component.html","webpack:///src/app/employee-list/employee-list.component.ts","webpack:///src/app/employee-list/employee-list.component.html","webpack:///src/app/employee.service.ts","webpack:///src/app/employee.ts","webpack:///src/app/update-employee/update-employee.component.ts","webpack:///src/app/update-employee/update-employee.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CreateEmployeeComponent","employeeService","router","employee","createEmployee","subscribe","data","console","log","goToEmployeeList","error","navigate","saveEmployee","onSubmit","EmployeeDetailsComponent","route","employeService","snapshot","params","getEmployeeById","EmployeeListComponent","getEmployees","getEmployeesList","employees","deleteEmployee","EmployeeService","httpClient","baseURL","get","post","put","providedIn","Employee","UpdateEmployeeComponent","updateEmployee","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\nimport { UpdateEmployeeComponent } from './update-employee/update-employee.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\n\nconst routes: Routes = [\n  {path: 'employees', component: EmployeeListComponent},\n  {path: 'create-employee', component: CreateEmployeeComponent},\n  {path: '', redirectTo: 'employees', pathMatch: 'full'},\n  {path: 'update-employee/:id', component: UpdateEmployeeComponent},\n  {path: 'employee-details/:id', component: EmployeeDetailsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],                                                                                                                                                                                                                                                                                                          \n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Yassine Hwass DevOps Project';\n}\n","<nav class=\"navbar navbar-expand-sm bg-primary navbar-dark\">\n    <ul class = \"navbar-nav\">\n        <li class = \"nav-item\">\n            <a routerLink=\"employees\" routerLinkActive=\"active\" class=\"nav-link\" >Employee List</a>\n        </li>\n        <li class = \"nav-item\">\n            <a routerLink=\"create-employee\" routerLinkActive=\"active\" class=\"nav-link\" >Add Employee</a>\n        </li>\n    </ul>\n</nav>\n\n<h1 class=\"text-center\"> {{title}} </h1>\n<div class = \"container\">\n    <router-outlet></router-outlet>\n</div>\n<footer class = \"footer\">\n    <div class = \"container\">\n        <span>All Rights Reserved IT Progress</span>\n    </div>\n</footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\nimport { FormsModule} from '@angular/forms';\nimport { UpdateEmployeeComponent } from './update-employee/update-employee.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeListComponent,\n    CreateEmployeeComponent,\n    UpdateEmployeeComponent,\n    EmployeeDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employee';\nimport { EmployeeService } from '../employee.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.css']\n})\nexport class CreateEmployeeComponent implements OnInit {\n\n  employee: Employee = new Employee();\n  constructor(private employeeService: EmployeeService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  saveEmployee(){\n    this.employeeService.createEmployee(this.employee).subscribe( data =>{\n      console.log(data);\n      this.goToEmployeeList();\n    },\n    error => console.log(error));\n  }\n\n  goToEmployeeList(){\n    this.router.navigate(['/employees']);\n  }\n  \n  onSubmit(){\n    console.log(this.employee);\n    this.saveEmployee();\n  }\n}\n","<div class=\"col-md-6 offset-md-3\">\n    <h3> Create Employee </h3>\n    <form (ngSubmit) = \"onSubmit()\">\n    \n        <div class=\"form-group\">\n            <label> First Name</label>\n            <input type=\"text\" class =\"form-control\" id = \"firstName\"\n                [(ngModel)] = \"employee.firstName\" name = \"firstName\">\n        </div>\n    \n        <div class=\"form-group\">\n            <label> Last Name</label>\n            <input type=\"text\" class =\"form-control\" id = \"lastName\"\n                [(ngModel)] = \"employee.lastName\" name = \"lastName\">\n        </div>\n    \n        <div class=\"form-group\">\n            <label> Email Id</label>\n            <input type=\"text\" class =\"form-control\" id = \"emailId\"\n                [(ngModel)] = \"employee.emailId\" name = \"emailId\">\n        </div>\n    \n        <button class = \"btn btn-success\" type =\"submit\">Submit</button>\n    \n    </form>\n    </div> ","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employee';\nimport { ActivatedRoute } from '@angular/router';\nimport { EmployeeService } from '../employee.service';\n\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-details.component.html',\n  styleUrls: ['./employee-details.component.css']\n})\nexport class EmployeeDetailsComponent implements OnInit {\n\n  id: number\n  employee: Employee\n  constructor(private route: ActivatedRoute, private employeService: EmployeeService) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['id'];\n\n    this.employee = new Employee();\n    this.employeService.getEmployeeById(this.id).subscribe( data => {\n      this.employee = data;\n    });\n  }\n\n}\n","<h3> View Employee Details</h3>\n<div>\n    <div>\n        <label> <b> First Name: </b></label> {{employee.firstName}}\n    </div>\n    <div>\n        <label> <b> Last Name: </b></label> {{employee.lastName}}\n    </div>\n    <div>\n        <label> <b> Email Id: </b></label> {{employee.emailId}}\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employee'\nimport { EmployeeService } from '../employee.service'\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n\n  employees: Employee[];\n\n  constructor(private employeeService: EmployeeService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.getEmployees();\n  }\n\n  private getEmployees(){\n    this.employeeService.getEmployeesList().subscribe(data => {\n      this.employees = data;\n    });\n  }\n\n  employeeDetails(id: number){\n    this.router.navigate(['employee-details', id]);\n  }\n\n  updateEmployee(id: number){\n    this.router.navigate(['update-employee', id]);\n  }\n\n  deleteEmployee(id: number){\n    this.employeeService.deleteEmployee(id).subscribe( data => {\n      console.log(data);\n      this.getEmployees();\n    })\n  }\n}\n","<h2> Employee List</h2>\n<table class = \"table table-striped\">\n    <thead>\n        <tr>\n            <th> First Name</th>\n            <th> Last Name </th>\n            <th> Email Id</th>\n            <th> Actions </th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor = \"let employee of employees\" >\n            <td> {{ employee.firstName }} </td>\n            <td> {{ employee.lastName }} </td>\n            <td> {{ employee.emailId }} </td>\n            <td>\n                <button (click) = \"updateEmployee(employee.id)\" class = \"btn btn-info\"> Update</button>\n                <button (click) = \"deleteEmployee(employee.id)\" class = \"btn btn-danger\" style=\"margin-left: 10px\"> Delete</button>\n                <button (click) = \"employeeDetails(employee.id)\" class = \"btn btn-info\" style=\"margin-left: 10px\"> View</button>\n            </td>\n        </tr>\n    </tbody>\n</table>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { Employee } from './employee';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  private baseURL = \"http://springboot:8080/api/v1/employees\";\n\n  constructor(private httpClient: HttpClient) { }\n  \n  getEmployeesList(): Observable<Employee[]>{\n    return this.httpClient.get<Employee[]>(`${this.baseURL}`);\n  }\n\n  createEmployee(employee: Employee): Observable<Object>{\n    return this.httpClient.post(`${this.baseURL}`, employee);\n  }\n\n  getEmployeeById(id: number): Observable<Employee>{\n    return this.httpClient.get<Employee>(`${this.baseURL}/${id}`);\n  }\n\n  updateEmployee(id: number, employee: Employee): Observable<Object>{\n    return this.httpClient.put(`${this.baseURL}/${id}`, employee);\n  }\n\n  deleteEmployee(id: number): Observable<Object>{\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n}\n","export class Employee {\n    id: number;\n    firstName: string;\n    lastName: string;\n    emailId: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../employee.service';\nimport { Employee } from '../employee';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-employee',\n  templateUrl: './update-employee.component.html',\n  styleUrls: ['./update-employee.component.css']\n})\nexport class UpdateEmployeeComponent implements OnInit {\n\n  id: number;\n  employee: Employee = new Employee();\n  constructor(private employeeService: EmployeeService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['id'];\n\n    this.employeeService.getEmployeeById(this.id).subscribe(data => {\n      this.employee = data;\n    }, error => console.log(error));\n  }\n\n  onSubmit(){\n    this.employeeService.updateEmployee(this.id, this.employee).subscribe( data =>{\n      this.goToEmployeeList();\n    }\n    , error => console.log(error));\n  }\n\n  goToEmployeeList(){\n    this.router.navigate(['/employees']);\n  }\n}\n","<div class=\"col-md-6 offset-md-3\">\n    <h3> Update Employee </h3>\n    <form (ngSubmit) = \"onSubmit()\">\n    \n        <div class=\"form-group\">\n            <label> First Name</label>\n            <input type=\"text\" class =\"form-control\" id = \"firstName\"\n                [(ngModel)] = \"employee.firstName\" name = \"firstName\">\n        </div>\n    \n        <div class=\"form-group\">\n            <label> Last Name</label>\n            <input type=\"text\" class =\"form-control\" id = \"lastName\"\n                [(ngModel)] = \"employee.lastName\" name = \"lastName\">\n        </div>\n    \n        <div class=\"form-group\">\n            <label> Email Id</label>\n            <input type=\"text\" class =\"form-control\" id = \"emailId\"\n                [(ngModel)] = \"employee.emailId\" name = \"emailId\">\n        </div>\n    \n        <button class = \"btn btn-success\" type =\"submit\">Submit</button>\n    \n    </form>\n    </div> ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}